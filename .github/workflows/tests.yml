name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install FFmpeg (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install FFmpeg (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install ffmpeg -y

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run unit tests
      run: |
        pytest tests/unit tests/test_config*.py -m "unit and not gpu" --cov=config --cov=pipeline --cov-report=xml --cov-report=term
      shell: bash

    - name: Run integration tests
      run: |
        pytest tests/integration -m "integration and not slow and not gpu" --cov-append --cov=config --cov=pipeline --cov-report=xml
      shell: bash

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run black
      run: black --check .

    - name: Run flake8
      run: |
        flake8 config pipeline tests --max-line-length=100

    - name: Run mypy
      run: |
        mypy config pipeline --ignore-missing-imports
      continue-on-error: true
